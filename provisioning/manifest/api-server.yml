apiVersion: v1
kind: ConfigMap
metadata:
  name: media-app-config
data:
  # --- 공통 설정 ---
  CREATED_TOPIC: "create-img"
  TRANSCODE_TOPIC: "transcode"
  KAFKA_URL: "broker-1:9092,broker-2:9092,broker-3:9092"

  # --- 데이터베이스 설정 ---
  RDB_URL: "mysql://rdbms:3306/testdb"
  RDB_USER: "user"
  RDB_PASSWORD: "pw"
  RDB_DRIVER_CLASS: "com.mysql.cj.jdbc.Driver"
  RDB_DDL: "update"

  # --- MinIO 설정 ---
  MINIO_URL: "http://minio:9000"
  MINIO_ROOT_USER: "minioadmin"
  MINIO_ROOT_PASSWORD: "minioadmin"
  MINIO_BUCKET: "image-bucket"

  # --- 서비스 포트 ---
  DOWNLOAD_PORT: "8081"
  UPLOAD_PORT: "8080"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: download-app-deployment
  labels:
    app: download-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: download-app
  template:
    metadata:
      labels:
        app: download-app
    spec:
      containers:
        - name: download-container
          image: leedong1848/image-download:latest
          ports:
            - containerPort: 8081
          envFrom:
            - configMapRef:
                name: media-app-config

---
apiVersion: v1
kind: Service
metadata:
  name: download-app-service
spec:
  type: ClusterIP
  selector:
    app: download-app
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081

---
# 4. Upload 애플리케이션 Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: upload-app-deployment
  labels:
    app: upload-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: upload-app
  template:
    metadata:
      labels:
        app: upload-app
    spec:
      containers:
        - name: upload-container
          image: leedong1848/image-upload:latest
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: media-app-config

---
apiVersion: v1
kind: Service
metadata:
  name: upload-app-service
spec:
  type: ClusterIP
  selector:
    app: upload-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
