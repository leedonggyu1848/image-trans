topic:
  created: ${CREATED_TOPIC:create-img}
spring:
  application:
    name: download

  cache:
    cache-names:
      - preSignedUrls
    caffeine:
      spec: expireAfterWrite=290s
  datasource:
    url: jdbc:${RDB_URL:mysql://localhost:3306/testdb}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: ${RDB_USER:user}
    password: ${RDB_PASSWORD:pw}
    driver-class-name: ${RDB_DRIVER_CLASS:com.mysql.cj.jdbc.Driver}
  jpa:
    hibernate:
      ddl-auto: ${RDB_DDL:update}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true

  kafka:
    bootstrap-servers: ${KAFKA_URL:localhost:9093}

    consumer:
      group-id: download-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.value.default.type: com.image.event.CreatedEvent
        spring.json.trusted.packages: "*"

minio:
  url: ${MINIO_URL:http://localhost:9000}
  access-key: ${MINIO_ROOT_USER:minioadmin}
  secret-key: ${MINIO_ROOT_PASSWORD:minioadmin}
  bucket: ${MINIO_BUCKET:image-bucket}
server:
  port: ${DOWNLOAD_PORT:8081}