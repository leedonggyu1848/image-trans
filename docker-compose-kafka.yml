version: "3.8"

services:
  broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: kafka-broker
    ports:
      - "9095:9095"
    environment:
      KAFKA_NODE_ID: 1 # 고유한 노드 ID
      KAFKA_PROCESS_ROLES: broker,controller # 브로커와 컨트롤러 역할 모두 수행 (KRaft)
      # 리스너 정의: PLAINTEXT는 일반 클라이언트용, CONTROLLER는 내부 컨트롤러 통신용
      KAFKA_LISTENERS: INTERNAL://broker:9092,CONTROLLER://broker:9093,CONTAINER://0.0.0.0:9094,EXPOSED://0.0.0.0:9095
      # 다른 브로커와의 통신에 사용할 리스너 이름 (KRaft 필수 설정)
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      # 클라이언트에게 알려줄 리스너 주소 (외부에서 접근할 때 사용)
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker:9092,CONTROLLER://broker:9093,CONTAINER://broker:9094,EXPOSED://localhost:9095
      # KRaft 컨트롤러 리스너 이름 명시 (KRaft 필수 설정)
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      # 리스너별 보안 프로토콜 매핑 (KRaft 필수 설정)
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,CONTAINER:PLAINTEXT,EXPOSED:PLAINTEXT
      # KRaft 컨트롤러 쿼럼 설정 (단일 노드이므로 자기 자신을 가리킴)
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      # 내부 토픽 (offsets, transaction state)의 복제 계수 (개발/테스트용으로 1)
      # 프로덕션에서는 브로커 수에 맞게 3 이상으로 설정 권장
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # 컨슈머 그룹 리밸런싱 지연 시간 (개발용으로 0)
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      # Kafka 데이터 및 로그 저장 경로
      KAFKA_LOG_DIRS: /var/lib/kafka/data

    volumes:
      - ./kafka/kafka-data:/var/lib/kafka/data # 데이터 영속성을 위한 볼륨 마운트

    healthcheck:
      test: nc -z broker 9092 || exit -1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  kafka-ui:
    image: provectuslabs/kafka-ui:latest # Kafka UI 이미지
    container_name: kafka-ui
    ports:
      - "1234:8080" # 외부에서 Kafka UI에 접근할 포트
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local-kafka-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:9094
    depends_on:
      broker:
        condition: service_healthy
